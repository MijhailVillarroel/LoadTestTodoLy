<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Todo.Ly: Create Items" enabled="true">
      <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
        <boolProp name="LoopController.continue_forever">false</boolProp>
        <stringProp name="LoopController.loops">1</stringProp>
      </elementProp>
      <stringProp name="ThreadGroup.num_threads">${executionUsers}</stringProp>
      <stringProp name="ThreadGroup.ramp_time">1</stringProp>
      <longProp name="ThreadGroup.start_time">1471545118000</longProp>
      <longProp name="ThreadGroup.end_time">1471545118000</longProp>
      <boolProp name="ThreadGroup.scheduler">false</boolProp>
      <stringProp name="ThreadGroup.duration"></stringProp>
      <stringProp name="ThreadGroup.delay"></stringProp>
    </ThreadGroup>
    <hashTree>
      <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="__EVENTTARGET" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__EVENTTARGET</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="__EVENTARGUMENT" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__EVENTARGUMENT</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                <stringProp name="Argument.value">/wEPDwUKLTI4MzA5NDI1OA9kFgJmD2QWAgIDD2QWBAIBD2QWBGYPDxYCHgdWaXNpYmxlaGQWAgIBDw8WAh8AaGRkAgIPDxYCHwBoZGQCAw9kFgICAQ8PFgIfAGhkZBgBBR5fX0NvbnRyb2xzUmVxdWlyZVBvc3RCYWNrS2V5X18WBQUqY3RsMDAkTWFpbkNvbnRlbnQkTG9naW5Db250cm9sMSRDYlJlbWVtYmVyBStjdGwwMCRNYWluQ29udGVudCRMb2dpbkNvbnRyb2wxJEJ1dHRvbkxvZ2luBSpjdGwwMCRNYWluQ29udGVudCRMb2dpbkNvbnRyb2wxJEJ1dHRvblNlbmQFLmN0bDAwJE1haW5Db250ZW50JFNpZ251cENvbnRyb2wxJENoZWNrQm94VGVybXMFLWN0bDAwJE1haW5Db250ZW50JFNpZ251cENvbnRyb2wxJEJ1dHRvblNpZ251cJpR+CzdclpngYMtssh6BY496vCG</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                <stringProp name="Argument.value">CA0B0334</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                <stringProp name="Argument.value">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</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$LoginControl1$TextBoxEmail" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$LoginControl1$TextBoxEmail</stringProp>
                <stringProp name="Argument.value">Mijhail.Villarroel@fundacion-jala.org</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$LoginControl1$TextBoxPassword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$LoginControl1$TextBoxPassword</stringProp>
                <stringProp name="Argument.value">java123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$LoginControl1$CbRemember" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$LoginControl1$CbRemember</stringProp>
                <stringProp name="Argument.value">on</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$LoginControl1$ButtonLogin.x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$LoginControl1$ButtonLogin.x</stringProp>
                <stringProp name="Argument.value">51</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$LoginControl1$ButtonLogin.y" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$LoginControl1$ButtonLogin.y</stringProp>
                <stringProp name="Argument.value">17</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$LoginControl1$TextBoxForgotPwdEmail" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$LoginControl1$TextBoxForgotPwdEmail</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$SignupControl1$TextBoxFullName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$SignupControl1$TextBoxFullName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$SignupControl1$TextBoxEmail" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$SignupControl1$TextBoxEmail</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$SignupControl1$TextBoxPassword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$SignupControl1$TextBoxPassword</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ctl00$MainContent$SignupControl1$DropDownTimezone" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">ctl00$MainContent$SignupControl1$DropDownTimezone</stringProp>
                <stringProp name="Argument.value">Pacific Standard Time</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">todo.ly</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://todo.ly/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:43.0) Gecko/20100101 Firefox/43.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Projects" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Content&quot;:&quot;Project Test ${__time()}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">todo.ly</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://todo.ly/api/projects.json</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="X-TrackerToken" elementType="Header">
                <stringProp name="Header.name">X-TrackerToken</stringProp>
                <stringProp name="Header.value">1798746c705e559b6f513f1bf280d9d6</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">b6c0663a-dc80-28c3-9fd2-ed023f8158c9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idProjects</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Create Project" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
        <stringProp name="ConstantTimer.delay">${__Random(MIN_TIME,MAX_TIME)}</stringProp>
      </ConstantTimer>
      <hashTree/>
      <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
        <boolProp name="LoopController.continue_forever">true</boolProp>
        <stringProp name="LoopController.loops">5</stringProp>
      </LoopController>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Item" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Content&quot;:&quot;tesItem ${__time()}&quot;,&quot;ProjectId&quot;:&quot;${idProjects}&quot;,&quot;DueDate&quot;:&quot;&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">todo.ly</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://todo.ly/api/items.json</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="X-TrackerToken" elementType="Header">
                <stringProp name="Header.name">X-TrackerToken</stringProp>
                <stringProp name="Header.value">1798746c705e559b6f513f1bf280d9d6</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">b6c0663a-dc80-28c3-9fd2-ed023f8158c9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${__Random(MIN_TIME,MAX_TIME)}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">${__Random(MIN_TIME,MAX_TIME)}</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get All Items of a project" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">todo.ly</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path">https://todo.ly/api/projects/${idProjects}/items.json</stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <boolProp name="HTTPSampler.monitor">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
      </HTTPSamplerProxy>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="X-TrackerToken" elementType="Header">
              <stringProp name="Header.name">X-TrackerToken</stringProp>
              <stringProp name="Header.value">1798746c705e559b6f513f1bf280d9d6</stringProp>
            </elementProp>
            <elementProp name="Accept-Language" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
            </elementProp>
            <elementProp name="Postman-Token" elementType="Header">
              <stringProp name="Header.name">Postman-Token</stringProp>
              <stringProp name="Header.value">b6c0663a-dc80-28c3-9fd2-ed023f8158c9</stringProp>
            </elementProp>
            <elementProp name="Origin" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">*/*</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="Cache-Control" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="Accept-Encoding" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
          <stringProp name="JSONPostProcessor.referenceNames">idsItems</stringProp>
          <stringProp name="JSONPostProcessor.jsonPathExprs">$..Id</stringProp>
          <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
        </JSONPostProcessor>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion create Items" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
      </hashTree>
      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
        <stringProp name="ConstantTimer.delay">${__Random(MIN_TIME,MAX_TIME)}</stringProp>
      </ConstantTimer>
      <hashTree/>
      <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller Delete" enabled="true">
        <stringProp name="ForeachController.inputVal">idsItems</stringProp>
        <stringProp name="ForeachController.returnVal">idItem</stringProp>
        <boolProp name="ForeachController.useSeparator">true</boolProp>
      </ForeachController>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request Delete" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">todo.ly</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://todo.ly/api/items/${idItem}.json</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="X-TrackerToken" elementType="Header">
                <stringProp name="Header.name">X-TrackerToken</stringProp>
                <stringProp name="Header.value">1798746c705e559b6f513f1bf280d9d6</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">b6c0663a-dc80-28c3-9fd2-ed023f8158c9</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get All Items of a project" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">todo.ly</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path">https://todo.ly/api/projects/${idProjects}/items.json</stringProp>
        <stringProp name="HTTPSampler.method">GET</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <boolProp name="HTTPSampler.monitor">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
      </HTTPSamplerProxy>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="X-TrackerToken" elementType="Header">
              <stringProp name="Header.name">X-TrackerToken</stringProp>
              <stringProp name="Header.value">1798746c705e559b6f513f1bf280d9d6</stringProp>
            </elementProp>
            <elementProp name="Accept-Language" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
            </elementProp>
            <elementProp name="Postman-Token" elementType="Header">
              <stringProp name="Header.name">Postman-Token</stringProp>
              <stringProp name="Header.value">b6c0663a-dc80-28c3-9fd2-ed023f8158c9</stringProp>
            </elementProp>
            <elementProp name="Origin" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">*/*</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="Cache-Control" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="Accept-Encoding" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor" enabled="true">
          <stringProp name="JSONPostProcessor.referenceNames">idsItems</stringProp>
          <stringProp name="JSONPostProcessor.jsonPathExprs">$..Id</stringProp>
          <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
        </JSONPostProcessor>
        <hashTree/>
        <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Size Items" enabled="true">
          <stringProp name="Assertion.test_field">SizeAssertion.response_message</stringProp>
          <stringProp name="SizeAssertion.size">2</stringProp>
          <intProp name="SizeAssertion.operator">1</intProp>
        </SizeAssertion>
        <hashTree/>
      </hashTree>
      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="tearDown" enabled="true">
        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments">
            <elementProp name="" elementType="HTTPArgument">
              <boolProp name="HTTPArgument.always_encode">false</boolProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="HTTPSampler.domain">todo.ly</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path">https://todo.ly/api/projects/${idProjects}.json</stringProp>
        <stringProp name="HTTPSampler.method">DELETE</stringProp>
        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        <boolProp name="HTTPSampler.monitor">false</boolProp>
        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
      </HTTPSamplerProxy>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="X-TrackerToken" elementType="Header">
              <stringProp name="Header.name">X-TrackerToken</stringProp>
              <stringProp name="Header.value">1798746c705e559b6f513f1bf280d9d6</stringProp>
            </elementProp>
            <elementProp name="Accept-Language" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
            </elementProp>
            <elementProp name="Postman-Token" elementType="Header">
              <stringProp name="Header.name">Postman-Token</stringProp>
              <stringProp name="Header.value">b6c0663a-dc80-28c3-9fd2-ed023f8158c9</stringProp>
            </elementProp>
            <elementProp name="Origin" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">*/*</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="Cache-Control" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="Accept-Encoding" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
      </hashTree>
      <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
        <boolProp name="displayJMeterProperties">false</boolProp>
        <boolProp name="displayJMeterVariables">true</boolProp>
        <boolProp name="displaySystemProperties">false</boolProp>
      </DebugSampler>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="ResultCollector.success_only_logging">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
